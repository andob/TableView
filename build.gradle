/*
 * Copyright (c) 2018. Evren CoÅŸkun
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.4.10"
        classpath 'digital.wup:android-maven-publish:3.6.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'http://maven.andob.info/repository/open_source/' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    if (project.getGradle().startParameter.taskNames.any{it.contains('bintrayUpload')} && project.name in ['tableview']) {
        println project.name
        apply plugin: 'maven'

        gradle.taskGraph.whenReady { taskGraph ->
            def pomTask = taskGraph.getAllTasks().find {
                it.path == ":$project.name:generatePomFileForReleasePublication"
            }
            if (pomTask == null) println 'pomTask null'
            if (pomTask == null) return
            pomTask.doLast {
                println 'Updating pom-file(s) with License info'
                pomTask.outputs.files
                        .filter { File file ->
                            file.path.contains("publications") && file.name.matches("^pom-.+\\.xml\$")
                        }
                        .forEach { File file -> addLicense(file) }
            }
        }
    }
}

static void addLicense(File pom) {
    def licenseNode = new Node(null, "license")
    licenseNode.append(new Node(null, "name", "MIT"))
    licenseNode.append(new Node(null, "url", "https://github.com/evrencoskun/TableView/blob/master/LICENSE"))
    def licensesNode = new Node(null, "licenses")
    licensesNode.append(licenseNode)

    def xml = new XmlParser().parse(pom)
    xml.append(licensesNode)

    def writer = new PrintWriter(new FileWriter(pom))
    def printer = new XmlNodePrinter(writer)
    printer.preserveWhitespace = true
    printer.print(xml)
    writer.close()
}
